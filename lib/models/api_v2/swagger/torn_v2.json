{
    "openapi": "3.0.0",
    "info": {
        "title": "Torn API",
        "description": "\n * The development of Torn's API v2 is still ongoing.\n * If selections remain unaltered, they will default to the API v1 version.\n * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.\n * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.",
        "version": "2.0"
    },
    "servers": [
        {
            "url": "https://api.torn.com/v2",
            "description": "This is the base URL"
        }
    ],
    "paths": {
        "/faction/{id}/hof": {
            "get": {
                "tags": [
                    "Hall of Fame",
                    "Faction",
                    "Stable"
                ],
                "summary": "Get a faction's hall of fame rankings.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FactionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/hof": {
            "get": {
                "tags": [
                    "Hall of Fame",
                    "Faction",
                    "Stable"
                ],
                "summary": "Get your faction's hall of fame rankings.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/{id}/members": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get a list of a faction's members",
                "description": "The 'revive_setting' value will be populated (not Unknown) if you're requesting data for your own faction and have faction permissions (with custom, limited or full access keys), otherwise it will be set as 'Unknown'.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FactionId"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsTrue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionMembersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/members": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get a list of your faction's members",
                "description": "The 'revive_setting' value will be populated (not Unknown) if you have faction permissions (with custom, limited or full access keys), otherwise it will be set as 'Unknown'.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsTrue"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionMembersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/{id}/basic": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get a faction's basic details",
                "description": "The 'is_enlisted' value will be populated if you're requesting data for your faction and have faction permissions (with custom, limited or full access keys), otherwise it will be set as null.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FactionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionBasicResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/basic": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get your faction's basic details",
                "description": "The 'is_enlisted' value will be populated if you have API faction permissions (with custom, limited or full access keys), otherwise it will be set as null.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionBasicResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/{id}/wars": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get a faction's wars & pacts details",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faction id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FactionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionWarsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/wars": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get your faction's wars & pacts details",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionWarsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/news": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get your faction's news details",
                "description": "It is possible to pass up to 10 categories at the time (comma separated). Categories 'attack', 'depositFunds' and 'giveFunds' are only available with 'Custom', 'Limited' or 'Full' access keys.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsFalse"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "$ref": "#/components/parameters/ApiSort"
                    },
                    {
                        "$ref": "#/components/parameters/ApiTo"
                    },
                    {
                        "$ref": "#/components/parameters/ApiFrom"
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "News category type",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FactionNewsCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionNewsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/attacks": {
            "get": {
                "tags": [
                    "Faction",
                    "Attacking",
                    "Stable"
                ],
                "summary": "Get your faction's detailed attacks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyLimited"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "$ref": "#/components/parameters/ApiSort"
                    },
                    {
                        "$ref": "#/components/parameters/ApiTo"
                    },
                    {
                        "$ref": "#/components/parameters/ApiFrom"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionAttacksResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/attacksfull": {
            "get": {
                "tags": [
                    "Faction",
                    "Attacking",
                    "Stable"
                ],
                "summary": "Get your faction's attacks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyLimited"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit1000"
                    },
                    {
                        "$ref": "#/components/parameters/ApiSort"
                    },
                    {
                        "$ref": "#/components/parameters/ApiTo"
                    },
                    {
                        "$ref": "#/components/parameters/ApiFrom"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionAttacksFullResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/applications": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get your faction's applications",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionApplicationsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/lookup": {
            "get": {
                "tags": [
                    "Faction",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available faction selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FactionLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction/timestamp": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faction": {
            "get": {
                "tags": [
                    "Faction",
                    "Stable"
                ],
                "summary": "Get any Faction selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FactionSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTags"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FactionHofResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionMembersResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionBasicResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionWarsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionNewsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionAttacksResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionAttacksFullResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionApplicationsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FactionLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/categories": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get publicly available forum categories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumCategoriesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/{categoryIds}/threads": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get threads for specific public forum category or categories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by the greatest of first_post_time and last_post_time timestamps",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns threads created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns threads created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "categoryIds",
                        "in": "path",
                        "description": "Category id or a list of category ids (comma separated)",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ForumId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumThreadsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/threads": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get threads across all forum categories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by the greatest of first_post_time and last_post_time timestamps",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns threads created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns threads created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumThreadsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/{threadId}/thread": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get specific thread details",
                "description": "Contains details of a thread including topic content and poll (if any).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "threadId",
                        "in": "path",
                        "description": "Thread id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ForumThreadId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumThreadResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/{threadId}/posts": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get specific forum thread posts",
                "description": "Returns 20 posts per page for a specific thread.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "This parameter is being replaced with 'stripTags' parameter and will be removed on 1st December 2024. Determines if the 'content' field returns raw HTML or plain text",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "default": "plain",
                            "enum": [
                                "raw",
                                "plain"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsTrue"
                    },
                    {
                        "name": "threadId",
                        "in": "path",
                        "description": "Thread id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ForumThreadId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumPostsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/lookup": {
            "get": {
                "tags": [
                    "Forum",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available forum selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForumLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum/timestamp": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forum": {
            "get": {
                "tags": [
                    "Forum",
                    "Stable"
                ],
                "summary": "Get any Forum selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ForumSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTags"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ForumCategoriesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ForumThreadsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ForumThreadResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ForumPostsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ForumLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/market/{id}/itemmarket": {
            "get": {
                "tags": [
                    "Market",
                    "Item Market",
                    "Unstable"
                ],
                "summary": "Get item market listings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ItemId"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "This parameter is being replaced with 'bonus' parameter and will be removed on 1st December 2024.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "$ref": "#/components/schemas/WeaponBonusEnum"
                        }
                    },
                    {
                        "name": "bonus",
                        "in": "query",
                        "description": "Used to filter weapons with a specific bonus.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/WeaponBonusEnum"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketItemMarketResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/market/lookup": {
            "get": {
                "tags": [
                    "Market",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available market selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/market/timestamp": {
            "get": {
                "tags": [
                    "Market",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/market": {
            "get": {
                "tags": [
                    "Market",
                    "Stable"
                ],
                "summary": "Get any Market selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/MarketSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bonus",
                        "in": "query",
                        "description": "Used to filter weapons with a specific bonus",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/WeaponBonusEnum"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/MarketItemMarketResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MarketLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/races": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get races",
                "description": "Returns a list of races, ordered by race start timestamp.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by schedule.start field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when started races are returned (schedule.start)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when started races are returned (scheduled.start)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Category of races returned",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "custom",
                            "enum": [
                                "official",
                                "custom"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingRacesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/{trackId}/records": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get track records",
                "description": "Returns a list of 10 best lap records for the chosen track and car class. Results are cached globally 1 hour.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "trackId",
                        "in": "path",
                        "description": "Track id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RaceTrackId"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Car class",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RaceClassEnum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingTrackRecordsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/{raceId}/race": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get specific race details",
                "description": "Returns the details of a race.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Race id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RaceId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingRaceDetailsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/cars": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get cars and their racing stats",
                "description": "Returns the stat details about racing cars.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingCarsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/tracks": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get race tracks and descriptions",
                "description": "Returns the details about racing tracks.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingTracksResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/carupgrades": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get all possible car upgrades",
                "description": "Returns the details about all possible car upgrades.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingCarUpgradesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/lookup": {
            "get": {
                "tags": [
                    "Racing",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available racing selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RacingLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing/timestamp": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/racing": {
            "get": {
                "tags": [
                    "Racing",
                    "Stable"
                ],
                "summary": "Get any Racing selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RacingSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/RacingRacesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingTrackRecordsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingRaceDetailsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingCarsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingTracksResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingCarUpgradesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RacingLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/{crimeId}/subcrimes": {
            "get": {
                "tags": [
                    "Torn",
                    "Crimes 2.0",
                    "Stable"
                ],
                "summary": "Get Subcrimes information",
                "description": "Return the details about possible actions for a specific crime.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "crimeId",
                        "in": "path",
                        "description": "Crime id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornSubcrimesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/crimes": {
            "get": {
                "tags": [
                    "Torn",
                    "Crimes 2.0",
                    "Stable"
                ],
                "summary": "Get crimes information",
                "description": "Return the details about released crimes.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornCrimesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/calendar": {
            "get": {
                "tags": [
                    "Torn",
                    "Stable"
                ],
                "summary": "Get calendar information",
                "description": "Get the details about competitions & events in the running year.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornCalendarResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/hof": {
            "get": {
                "tags": [
                    "Torn",
                    "Hall of Fame",
                    "Stable"
                ],
                "summary": "Get player hall of fame positions for a specific category",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffset"
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Leaderboards category",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TornHofCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/factionhof": {
            "get": {
                "tags": [
                    "Torn",
                    "Hall of Fame",
                    "Stable"
                ],
                "summary": "Get faction hall of fame positions for a specific category",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffset"
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Leaderboards category",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TornFactionHofCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornFactionHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/{logCategoryId}/logtypes": {
            "get": {
                "tags": [
                    "Torn",
                    "Logs",
                    "Stable"
                ],
                "summary": "Get available log ids for a specific log category",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "logCategoryId",
                        "in": "path",
                        "description": "Log category id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogCategoryId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornLogTypesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/logtypes": {
            "get": {
                "tags": [
                    "Torn",
                    "Logs",
                    "Stable"
                ],
                "summary": "Get all available log ids",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornLogTypesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/logcategories": {
            "get": {
                "tags": [
                    "Torn",
                    "Logs",
                    "Stable"
                ],
                "summary": "Get available log categories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornLogCategoriesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/bounties": {
            "get": {
                "tags": [
                    "Torn",
                    "Bounties",
                    "Stable"
                ],
                "summary": "Get bounties",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornBountiesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/lookup": {
            "get": {
                "tags": [
                    "Torn",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available torn selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TornLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn/timestamp": {
            "get": {
                "tags": [
                    "Torn",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/torn": {
            "get": {
                "tags": [
                    "Torn",
                    "Stable"
                ],
                "summary": "Get any Torn selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TornSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTags"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TornSubcrimesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornCrimesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornCalendarResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornHofResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornFactionHofResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornLogTypesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornLogCategoriesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornBountiesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TornLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{crimeId}/crimes": {
            "get": {
                "tags": [
                    "User",
                    "Crimes 2.0",
                    "Stable"
                ],
                "summary": "Get user's crime statistics",
                "description": "Return the details and statistics about a user's specific crime.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    },
                    {
                        "name": "crimeId",
                        "in": "path",
                        "description": "Crime id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCrimesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/races": {
            "get": {
                "tags": [
                    "Racing",
                    "User",
                    "Stable"
                ],
                "summary": "Get user races",
                "description": "Returns a list of user races, ordered by race start timestamp.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit100"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by schedule.start field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when started races are returned (schedule.start)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when started races are returned (scheduled.start)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Category of races returned",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "custom",
                            "enum": [
                                "official",
                                "custom"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRacesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/enlistedcars": {
            "get": {
                "tags": [
                    "Racing",
                    "User",
                    "Stable"
                ],
                "summary": "Get user enlisted cars",
                "description": "Returns a list of all user enlisted cars.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserEnlistedCarsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/forumposts": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get posts for a specific player",
                "description": "Returns 20 posts per page for a specific player.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "This parameter is being replaced with 'stripTags' parameter and will be removed on 1st December 2024. Determines if the 'content' field returns raw HTML or plain text",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "default": "plain",
                            "enum": [
                                "raw",
                                "plain"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsTrue"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserId"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by post created timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns posts created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns posts created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumPostsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/forumposts": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get your posts",
                "description": "Returns 20 posts per page.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "This parameter is being replaced with 'stripTags' parameter and will be removed on 1st December 2024. Determines if the 'content' field returns raw HTML or plain text",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "default": "plain",
                            "enum": [
                                "raw",
                                "plain"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTagsTrue"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by post created timestamp",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns posts created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns posts created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumPostsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/forumthreads": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get threads for a specific player",
                "description": "Returns 100 threads per page for a specific player. When requesting data for the key owner, a field 'new_posts' is also available, indicating the amount of unread posts. Minimum API key is required for that.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserId"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by the greatest of first_post_time and last_post_time timestamps",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns threads created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns threads created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumThreadsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/forumthreads": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get your threads",
                "description": "Returns 100 threads per page. The field 'new_posts' is also available, indicating the amount of unread posts with a Minimum API key (or higher).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorted by the greatest of first_post_time and last_post_time timestamps",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Returns threads created before this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Returns threads created after this timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumThreadsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/forumsubscribedthreads": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get updates on threads you subscribed to",
                "description": "This selection returns data visible in 'Subscribed Threads' section on forum page. Threads are sorted in the same way as on site.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumSubscribedThreadsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/forumfeed": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get updates on your threads and posts",
                "description": "This selection returns data visible in 'Feed' section on forum page. Feed is sorted by timestamp descending. Only a maximum of 100 rows are returned.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumFeedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/forumfriends": {
            "get": {
                "tags": [
                    "Forum",
                    "User",
                    "Stable"
                ],
                "summary": "Get updates on your friends' activity",
                "description": "This selection returns data visible in 'Friends' section on forum page. Feed is sorted by timestamp descending. Only a maximum of 100 rows are returned.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserForumFriendsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/hof": {
            "get": {
                "tags": [
                    "Hall of Fame",
                    "User",
                    "Stable"
                ],
                "summary": "Get hall of fame rankings for a specific player",
                "description": "The battle_stats selection will be populated only when requesting selection with Limited, Full or Custom key and for yourself.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/hof": {
            "get": {
                "tags": [
                    "Hall of Fame",
                    "User",
                    "Stable"
                ],
                "summary": "Get your hall of fame rankings",
                "description": "When requesting selection with Limited, Full or Custom key, battle_stats selection will be populated.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHofResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/calendar": {
            "get": {
                "tags": [
                    "User",
                    "Stable"
                ],
                "summary": "Get your competition's event start time",
                "description": "Only available to yourself.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCalendarResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/bounties": {
            "get": {
                "tags": [
                    "User",
                    "Bounties",
                    "Stable"
                ],
                "summary": "Get bounties placed on a specific user",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBountiesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/bounties": {
            "get": {
                "tags": [
                    "User",
                    "Bounties",
                    "Stable"
                ],
                "summary": "Get bounties placed on you",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBountiesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/jobranks": {
            "get": {
                "tags": [
                    "User",
                    "Stable"
                ],
                "summary": "Get your starter job positions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyMinimal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserJobRanksResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/itemmarket": {
            "get": {
                "tags": [
                    "User",
                    "Item Market",
                    "Unstable"
                ],
                "summary": "Get your item market listings for a specific item",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyLimited"
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserItemMarketResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/lookup": {
            "get": {
                "tags": [
                    "User",
                    "Lookup",
                    "Stable"
                ],
                "summary": "Get all available user selections",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLookupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/timestamp": {
            "get": {
                "tags": [
                    "User",
                    "Stable"
                ],
                "summary": "Get current server time",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimestampResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User",
                    "Stable"
                ],
                "summary": "Get any User selection",
                "description": "Choose one or more selections (comma separated).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ApiKeyPublic"
                    },
                    {
                        "name": "selections",
                        "in": "query",
                        "description": "Selection names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserSelectionName"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "selection id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiLimit"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Timestamp until when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Timestamp after when rows are returned",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cat",
                        "in": "query",
                        "description": "Selection category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiStripTags"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Direction to sort rows in",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/ApiOffsetNoDefault"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/UserCrimesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserRacesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserEnlistedCarsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserForumPostsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserForumThreadsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserForumSubscribedThreadsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserForumFeedResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserForumFriendsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserHofResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserCalendarResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserBountiesResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserJobRanksResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserItemMarketResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserLookupResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TimestampResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RaceClassEnum": {
                "type": "string",
                "enum": [
                    "A",
                    "B",
                    "C",
                    "D",
                    "E"
                ]
            },
            "FactionNewsCategory": {
                "type": "string",
                "enum": [
                    "main",
                    "attack",
                    "armoryDeposit",
                    "armoryAction",
                    "territoryWar",
                    "rankedWar",
                    "territoryGain",
                    "chain",
                    "crime",
                    "membership",
                    "depositFunds",
                    "giveFunds"
                ]
            },
            "FactionRankEnum": {
                "type": "string",
                "enum": [
                    "Unranked",
                    "Bronze",
                    "Silver",
                    "Gold",
                    "Platinum",
                    "Diamond"
                ]
            },
            "UserCrimeUniquesRewardAmmoEnum": {
                "type": "string",
                "enum": [
                    "standard",
                    "special"
                ]
            },
            "RaceStatusEnum": {
                "type": "string",
                "enum": [
                    "open",
                    "in_progress",
                    "finished"
                ]
            },
            "TornHofCategory": {
                "type": "string",
                "enum": [
                    "level",
                    "busts",
                    "rank",
                    "traveltime",
                    "workstats",
                    "networth",
                    "revives",
                    "defends",
                    "offences",
                    "attacks",
                    "awards",
                    "racingwins",
                    "racingpoints",
                    "racingskill"
                ]
            },
            "TornFactionHofCategory": {
                "type": "string",
                "enum": [
                    "respect",
                    "chains",
                    "rank"
                ]
            },
            "FactionAttackResult": {
                "type": "string",
                "enum": [
                    "None",
                    "Attacked",
                    "Mugged",
                    "Hospitalized",
                    "Arrested",
                    "Looted",
                    "Lost",
                    "Stalemate",
                    "Assist",
                    "Escape",
                    "Timeout",
                    "Special",
                    "Bounty",
                    "Interrupted"
                ]
            },
            "RaceCarUpgradeCategory": {
                "type": "string",
                "enum": [
                    "Aerodynamics",
                    "Brakes",
                    "Engine",
                    "Exhaust and Induction",
                    "Fuel",
                    "Safety",
                    "Suspension",
                    "Transmission",
                    "Weight Reduction",
                    "Wheels and Tyres"
                ]
            },
            "JobPositionArmyEnum": {
                "type": "string",
                "enum": [
                    "Private",
                    "Corporal",
                    "Sergeant",
                    "Master Sergeant",
                    "Warrant Officer",
                    "Lieutenant",
                    "Major",
                    "Colonel",
                    "Brigadier",
                    "General"
                ]
            },
            "JobPositionGrocerEnum": {
                "type": "string",
                "enum": [
                    "Bagboy",
                    "Price Labeler",
                    "Cashier",
                    "Food Delivery",
                    "Manager"
                ]
            },
            "WeaponBonusEnum": {
                "type": "string",
                "enum": [
                    "Any",
                    "Double",
                    "Yellow",
                    "Orange",
                    "Red",
                    "Achilles",
                    "Assassinate",
                    "Backstab",
                    "Berserk",
                    "Bleed",
                    "Blindfire",
                    "Blindside",
                    "Bloodlust",
                    "Burn",
                    "Comeback",
                    "Conserve",
                    "Cripple",
                    "Crusher",
                    "Cupid",
                    "Deadeye",
                    "Deadly",
                    "Demoralize",
                    "Disarm",
                    "Double-edged",
                    "Double Tap",
                    "Emasculate",
                    "Empower",
                    "Eviscerate",
                    "Execute",
                    "Expose",
                    "Finale",
                    "Focus",
                    "Freeze",
                    "Frenzy",
                    "Fury",
                    "Grace",
                    "Hazardous",
                    "Home run",
                    "Irradiate",
                    "Lacerate",
                    "Motivation",
                    "Paralyze",
                    "Parry",
                    "Penetrate",
                    "Plunder",
                    "Poison",
                    "Powerful",
                    "Proficience",
                    "Puncture",
                    "Quicken",
                    "Rage",
                    "Revitalize",
                    "Roshambo",
                    "Shock",
                    "Sleep",
                    "Slow",
                    "Smash",
                    "Smurf",
                    "Specialist",
                    "Spray",
                    "Storage",
                    "Stricken",
                    "Stun",
                    "Suppress",
                    "Sure Shot",
                    "Throttle",
                    "Toxin",
                    "Warlord",
                    "Weaken",
                    "Wind-up",
                    "Wither"
                ]
            },
            "JobPositionCasinoEnum": {
                "type": "string",
                "enum": [
                    "Gaming Consultant",
                    "Marketing Manager",
                    "Revenue Manager",
                    "Casino Manager",
                    "Casino President"
                ]
            },
            "JobPositionMedicalEnum": {
                "type": "string",
                "enum": [
                    "Medical Student",
                    "Houseman",
                    "Senior Houseman",
                    "GP",
                    "Consultant",
                    "Surgeon",
                    "Brain Surgeon"
                ]
            },
            "JobPositionLawEnum": {
                "type": "string",
                "enum": [
                    "Law Student",
                    "Paralegal",
                    "Probate Lawyer",
                    "Trial Lawyer",
                    "Circuit Court Judge",
                    "Federal Judge"
                ]
            },
            "JobPositionEducationEnum": {
                "type": "string",
                "enum": [
                    "Recess Supervisor",
                    "Substitute Teacher",
                    "Elementary Teacher",
                    "Secondary Teacher",
                    "Professor",
                    "Vice-Principal",
                    "Principal"
                ]
            },
            "RaceCarUpgradeSubCategory": {
                "type": "string",
                "enum": [
                    "Engine Cooling",
                    "Front Diffuser",
                    "Rear Diffuser",
                    "Spoiler",
                    "Brake Accessory",
                    "Brake Control",
                    "Callipers",
                    "Discs",
                    "Brake Cooling",
                    "Fluid",
                    "Rear Control Arms",
                    "Springs",
                    "Upper Front Brace",
                    "Clutch",
                    "Differential",
                    "Flywheel",
                    "Gearbox",
                    "Shifting",
                    "Boot",
                    "Hood",
                    "Interior",
                    "Roof",
                    "Steering wheel",
                    "Strip out",
                    "Windows",
                    "Tyres",
                    "Wheels",
                    "Rear Bushes",
                    "Rear Brace",
                    "Lower Front Brace",
                    "Front Tie Rods",
                    "Front Bushes",
                    "Seat",
                    "Safety Accessory",
                    "Roll cage",
                    "Overalls",
                    "Helmet",
                    "Fire Extinguisher",
                    "Cut-off",
                    "Fuel",
                    "Manifold",
                    "Exhaust",
                    "Air Filter",
                    "Turbo",
                    "Pistons",
                    "Intercooler",
                    "Gasket",
                    "Fuel Pump",
                    "Engine Porting",
                    "Engine Cleaning",
                    "Computer",
                    "Camshaft",
                    "Pads",
                    "Fluid"
                ]
            },
            "FactionApplicationStatusEnum": {
                "type": "string",
                "enum": [
                    "accepted",
                    "declined",
                    "withdrawn"
                ]
            },
            "RaceId": {
                "type": "integer"
            },
            "RaceTrackId": {
                "type": "integer"
            },
            "RaceCarId": {
                "type": "integer"
            },
            "RaceCarUpgradeId": {
                "type": "integer"
            },
            "ItemId": {
                "type": "integer"
            },
            "ItemUid": {
                "type": "integer"
            },
            "UserId": {
                "type": "integer"
            },
            "LogId": {
                "type": "integer"
            },
            "LogCategoryId": {
                "type": "integer"
            },
            "FactionId": {
                "type": "integer"
            },
            "AttackId": {
                "type": "integer"
            },
            "AttackCode": {
                "type": "string"
            },
            "ForumId": {
                "type": "integer"
            },
            "ForumThreadId": {
                "type": "integer"
            },
            "ForumPostId": {
                "type": "integer"
            },
            "RequestLinks": {
                "properties": {
                    "next": {
                        "description": "Auto-generated link to get the next set of records.",
                        "type": "string",
                        "nullable": true
                    },
                    "prev": {
                        "description": "Auto-generated link to get the prev set of records.",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RequestMetadata": {
                "properties": {
                    "links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    }
                },
                "type": "object"
            },
            "RequestMetadataWithLinks": {
                "properties": {
                    "links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    }
                },
                "type": "object"
            },
            "ForumFeedTypeEnum": {
                "description": "This represents the type of the activity. Values range from 1 to 8 where:\n *                    1 = 'X posted on a thread',\n *                    2 = 'X created a thread',\n *                    3 = 'X liked your thread',\n *                    4 = 'X disliked your thread',\n *                    5 = 'X liked your post',\n *                    6 = 'X disliked your post',\n *                    7 = 'X quoted your post'.",
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            },
            "ReviveSetting": {
                "type": "string",
                "enum": [
                    "Everyone",
                    "Friends & faction",
                    "No one",
                    "Unknown"
                ]
            },
            "AttackPlayerFaction": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackPlayer": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "level": {
                        "type": "integer"
                    },
                    "faction": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttackPlayerFaction"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "AttackPlayerSimplified": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "faction_id": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FactionId"
                            },
                            {
                                "type": "integer",
                                "nullable": true
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Attack": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/AttackId"
                    },
                    "code": {
                        "$ref": "#/components/schemas/AttackCode"
                    },
                    "started": {
                        "description": "Attack start timestamp.",
                        "type": "integer"
                    },
                    "ended": {
                        "description": "Attack end timestamp.",
                        "type": "integer"
                    },
                    "attacker": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttackPlayer"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    },
                    "defender": {
                        "$ref": "#/components/schemas/AttackPlayer"
                    },
                    "result": {
                        "$ref": "#/components/schemas/FactionAttackResult"
                    },
                    "respect_gain": {
                        "type": "number",
                        "format": "float"
                    },
                    "respect_loss": {
                        "type": "number",
                        "format": "float"
                    },
                    "chain": {
                        "type": "integer"
                    },
                    "is_stealthed": {
                        "type": "boolean"
                    },
                    "is_raid": {
                        "type": "boolean"
                    },
                    "is_ranked_war": {
                        "type": "boolean"
                    },
                    "modifiers": {
                        "properties": {
                            "fair_fight": {
                                "type": "number",
                                "format": "float"
                            },
                            "war": {
                                "type": "number",
                                "format": "float"
                            },
                            "retaliation": {
                                "type": "number",
                                "format": "float"
                            },
                            "group": {
                                "type": "number",
                                "format": "float"
                            },
                            "overseas": {
                                "type": "number",
                                "format": "float"
                            },
                            "chain": {
                                "type": "number",
                                "format": "float"
                            },
                            "warlord": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AttackSimplified": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/AttackId"
                    },
                    "code": {
                        "$ref": "#/components/schemas/AttackCode"
                    },
                    "started": {
                        "description": "Attack start timestamp.",
                        "type": "integer"
                    },
                    "ended": {
                        "description": "Attack end timestamp.",
                        "type": "integer"
                    },
                    "attacker": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttackPlayerSimplified"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    },
                    "defender": {
                        "$ref": "#/components/schemas/AttackPlayerSimplified"
                    },
                    "result": {
                        "$ref": "#/components/schemas/FactionAttackResult"
                    },
                    "respect_gain": {
                        "type": "number",
                        "format": "float"
                    },
                    "respect_loss": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "TimestampResponse": {
                "properties": {
                    "timestamp": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FactionHofStats": {
                "properties": {
                    "rank": {
                        "$ref": "#/components/schemas/HofValueString"
                    },
                    "respect": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "chain": {
                        "$ref": "#/components/schemas/HofValue"
                    }
                },
                "type": "object"
            },
            "FactionHofResponse": {
                "properties": {
                    "hof": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionHofStats"
                        }
                    }
                },
                "type": "object"
            },
            "FactionMember": {
                "description": "Details about a faction member.",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "position": {
                        "type": "string"
                    },
                    "level": {
                        "type": "number"
                    },
                    "days_in_faction": {
                        "type": "number"
                    },
                    "is_revivable": {
                        "type": "boolean"
                    },
                    "last_action": {
                        "$ref": "#/components/schemas/UserLastAction"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "life": {
                        "$ref": "#/components/schemas/UserLife"
                    },
                    "revive_setting": {
                        "$ref": "#/components/schemas/ReviveSetting"
                    }
                },
                "type": "object"
            },
            "UserLastAction": {
                "description": "Details about a user's last action.",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "number"
                    },
                    "relative": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLife": {
                "description": "Details about a user's life.",
                "properties": {
                    "current": {
                        "type": "number"
                    },
                    "maximum": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "UserStatus": {
                "description": "Details about a user's status.",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string"
                    },
                    "until": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "FactionMembersResponse": {
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionMember"
                        }
                    }
                },
                "type": "object"
            },
            "FactionRank": {
                "properties": {
                    "level": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "division": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "wins": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FactionBasic": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "tag_image": {
                        "type": "string"
                    },
                    "leader_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "co-leader_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "respect": {
                        "type": "integer"
                    },
                    "days_old": {
                        "type": "integer"
                    },
                    "capacity": {
                        "type": "integer"
                    },
                    "members": {
                        "type": "integer"
                    },
                    "is_enlisted": {
                        "description": "Indicates if the faction is enlisted for ranked wars. Available only with faction AA permissions for your own faction.",
                        "type": "boolean",
                        "nullable": true
                    },
                    "rank": {
                        "$ref": "#/components/schemas/FactionRank"
                    },
                    "best_chain": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FactionBasicResponse": {
                "properties": {
                    "basic": {
                        "$ref": "#/components/schemas/FactionBasic"
                    }
                },
                "type": "object"
            },
            "FactionPact": {
                "properties": {
                    "faction_id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "faction_name": {
                        "type": "string"
                    },
                    "until": {
                        "description": "The duration until when is the non-aggression pact valid.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FactionRankedWarParticipant": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer"
                    },
                    "chain": {
                        "description": "Faction's current chain.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FactionRankedWar": {
                "properties": {
                    "war_id": {
                        "type": "integer"
                    },
                    "start": {
                        "type": "integer"
                    },
                    "end": {
                        "type": "integer",
                        "nullable": true
                    },
                    "target": {
                        "description": "The score target of the war.",
                        "type": "integer"
                    },
                    "winner": {
                        "type": "integer",
                        "nullable": true
                    },
                    "factions": {
                        "description": "The factions involved in the ranked war.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionRankedWarParticipant"
                        }
                    }
                },
                "type": "object"
            },
            "FactionRaidWarParticipant": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer"
                    },
                    "chain": {
                        "description": "Faction's current chain.",
                        "type": "integer"
                    },
                    "is_aggressor": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FactionRaidWar": {
                "properties": {
                    "war_id": {
                        "type": "integer"
                    },
                    "start": {
                        "type": "integer"
                    },
                    "end": {
                        "type": "integer",
                        "nullable": true
                    },
                    "factions": {
                        "description": "The factions involved in the raid war.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionRaidWarParticipant"
                        }
                    }
                },
                "type": "object"
            },
            "FactionTerritoryWarParticipant": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer"
                    },
                    "chain": {
                        "description": "Faction's current chain.",
                        "type": "integer"
                    },
                    "is_aggressor": {
                        "type": "boolean"
                    },
                    "playerIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserId"
                        }
                    }
                },
                "type": "object"
            },
            "FactionTerritoryWar": {
                "properties": {
                    "war_id": {
                        "type": "integer"
                    },
                    "territory": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer"
                    },
                    "end": {
                        "type": "integer",
                        "nullable": true
                    },
                    "target": {
                        "description": "The score target of the war.",
                        "type": "integer"
                    },
                    "winner": {
                        "type": "integer",
                        "nullable": true
                    },
                    "factions": {
                        "description": "The factions involved in the territory war.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionTerritoryWarParticipant"
                        }
                    }
                },
                "type": "object"
            },
            "FactionWars": {
                "properties": {
                    "ranked": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FactionRankedWar"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    },
                    "raids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionRaidWar"
                        }
                    },
                    "territory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionTerritoryWar"
                        }
                    }
                },
                "type": "object"
            },
            "FactionWarsResponse": {
                "properties": {
                    "pacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionPact"
                        }
                    },
                    "wars": {
                        "$ref": "#/components/schemas/FactionWars"
                    }
                },
                "type": "object"
            },
            "FactionNews": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FactionNewsResponse": {
                "properties": {
                    "news": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionNews"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "FactionAttacksResponse": {
                "properties": {
                    "attacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attack"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "FactionAttacksFullResponse": {
                "properties": {
                    "attacks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttackSimplified"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "FactionApplication": {
                "properties": {
                    "id": {
                        "description": "application id",
                        "type": "integer"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/UserId"
                            },
                            "name": {
                                "type": "string"
                            },
                            "level": {
                                "type": "string"
                            },
                            "stats": {
                                "properties": {
                                    "strength": {
                                        "type": "integer"
                                    },
                                    "speed": {
                                        "type": "integer"
                                    },
                                    "dexterity": {
                                        "type": "integer"
                                    },
                                    "defense": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    },
                    "valid_until": {
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/FactionApplicationStatusEnum"
                    }
                },
                "type": "object"
            },
            "FactionApplicationsResponse": {
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionApplication"
                        }
                    }
                },
                "type": "object"
            },
            "FactionSelectionName": {
                "type": "string",
                "enum": [
                    "applications",
                    "armor",
                    "attacks",
                    "attacksfull",
                    "basic",
                    "boosters",
                    "caches",
                    "cesium",
                    "chain",
                    "chainreport",
                    "chains",
                    "contributors",
                    "crimeexp",
                    "crimenews",
                    "crimes",
                    "currency",
                    "donations",
                    "drugs",
                    "hof",
                    "lookup",
                    "medical",
                    "members",
                    "news",
                    "positions",
                    "rankedwars",
                    "reports",
                    "revives",
                    "revivesfull",
                    "stats",
                    "temporary",
                    "territory",
                    "territorynews",
                    "timestamp",
                    "upgrades",
                    "wars",
                    "weapons"
                ]
            },
            "FactionLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FactionSelectionName"
                        }
                    }
                },
                "type": "object"
            },
            "ForumCategoriesResponse": {
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "$ref": "#/components/schemas/ForumId"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "acronym": {
                                    "type": "string"
                                },
                                "threads": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ForumThreadAuthor": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "username": {
                        "type": "string"
                    },
                    "karma": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ForumPollVote": {
                "properties": {
                    "answer": {
                        "type": "string"
                    },
                    "votes": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ForumPoll": {
                "properties": {
                    "question": {
                        "type": "string"
                    },
                    "answers_count": {
                        "type": "integer"
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumPollVote"
                        }
                    }
                },
                "type": "object"
            },
            "ForumThreadBase": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ForumThreadId"
                    },
                    "title": {
                        "type": "string"
                    },
                    "forum_id": {
                        "$ref": "#/components/schemas/ForumId"
                    },
                    "posts": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "integer"
                    },
                    "views": {
                        "description": "Total number of times players have opened this thread.",
                        "type": "integer"
                    },
                    "author": {
                        "$ref": "#/components/schemas/ForumThreadAuthor"
                    },
                    "last_poster": {
                        "$ref": "#/components/schemas/ForumThreadAuthor"
                    },
                    "first_post_time": {
                        "type": "integer"
                    },
                    "last_post_time": {
                        "type": "integer",
                        "nullable": true
                    },
                    "has_poll": {
                        "type": "boolean"
                    },
                    "is_locked": {
                        "type": "boolean"
                    },
                    "is_sticky": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ForumThreadExtended": {
                "allOf": [
                    {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "content_raw": {
                                "type": "string"
                            },
                            "poll": {
                                "$ref": "#/components/schemas/ForumPoll"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ForumThreadBase"
                    }
                ]
            },
            "ForumPost": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ForumPostId"
                    },
                    "thread_id": {
                        "$ref": "#/components/schemas/ForumThreadId"
                    },
                    "author": {
                        "$ref": "#/components/schemas/ForumThreadAuthor"
                    },
                    "is_legacy": {
                        "description": "Indicates whether post was made using the old formatting engine which doesn't use HTML.",
                        "type": "boolean"
                    },
                    "is_topic": {
                        "type": "boolean"
                    },
                    "is_edited": {
                        "type": "boolean"
                    },
                    "is_pinned": {
                        "type": "boolean"
                    },
                    "created_time": {
                        "type": "integer"
                    },
                    "edited_by": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "has_quote": {
                        "type": "boolean"
                    },
                    "quoted_post_id": {
                        "description": "'quoted_post_id' is null when 'has_quote' is false.",
                        "type": "integer",
                        "nullable": true
                    },
                    "content": {
                        "description": "depending on the input 'cat' parameter, this will either return raw value (with HTML) or plain text. Legacy posts are returned as is, they can't be stripped of tags.",
                        "type": "string"
                    },
                    "likes": {
                        "type": "integer"
                    },
                    "dislikes": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ForumThreadUserExtended": {
                "allOf": [
                    {
                        "properties": {
                            "new_posts": {
                                "description": "Available only when requesting data for yourself (no id or your id) with at least 'Minimal' access type key.",
                                "type": "integer",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ForumThreadBase"
                    }
                ]
            },
            "ForumSubscribedThreadPostsCount": {
                "properties": {
                    "new": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ForumSubscribedThread": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ForumThreadId"
                    },
                    "forum_id": {
                        "$ref": "#/components/schemas/ForumId"
                    },
                    "author": {
                        "$ref": "#/components/schemas/ForumThreadAuthor"
                    },
                    "title": {
                        "type": "string"
                    },
                    "posts": {
                        "$ref": "#/components/schemas/ForumSubscribedThreadPostsCount"
                    }
                },
                "type": "object"
            },
            "ForumFeed": {
                "properties": {
                    "thread_id": {
                        "$ref": "#/components/schemas/ForumThreadId"
                    },
                    "post_id": {
                        "$ref": "#/components/schemas/ForumPostId"
                    },
                    "user": {
                        "$ref": "#/components/schemas/ForumThreadAuthor"
                    },
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer"
                    },
                    "is_seen": {
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ForumFeedTypeEnum"
                    }
                },
                "type": "object"
            },
            "ForumThreadsResponse": {
                "properties": {
                    "threads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumThreadBase"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "ForumThreadResponse": {
                "properties": {
                    "thread": {
                        "$ref": "#/components/schemas/ForumThreadExtended"
                    }
                },
                "type": "object"
            },
            "ForumPostsResponse": {
                "properties": {
                    "posts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumPost"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "ForumSelectionName": {
                "type": "string",
                "enum": [
                    "categories",
                    "lookup",
                    "posts",
                    "thread",
                    "threads",
                    "timestamp"
                ]
            },
            "ForumLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumSelectionName"
                        }
                    }
                },
                "type": "object"
            },
            "ItemMarketListingItemBonus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ItemMarketListingItemStats": {
                "properties": {
                    "damage": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "accuracy": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "armor": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ItemMarketItem": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ItemId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "average_price": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ItemMarketListingStackable": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ItemMarketListingItemDetails": {
                "properties": {
                    "uid": {
                        "$ref": "#/components/schemas/ItemUid"
                    },
                    "stats": {
                        "$ref": "#/components/schemas/ItemMarketListingItemStats"
                    },
                    "bonuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemMarketListingItemBonus"
                        }
                    },
                    "rarity": {
                        "type": "string",
                        "enum": [
                            "yellow",
                            "orange",
                            "red"
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ItemMarketListingNonstackable": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "itemDetails": {
                        "$ref": "#/components/schemas/ItemMarketListingItemDetails"
                    }
                },
                "type": "object"
            },
            "ItemMarket": {
                "properties": {
                    "item": {
                        "$ref": "#/components/schemas/ItemMarketItem"
                    },
                    "listings": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ItemMarketListingNonstackable"
                                },
                                {
                                    "$ref": "#/components/schemas/ItemMarketListingStackable"
                                }
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "MarketItemMarketResponse": {
                "properties": {
                    "itemmarket": {
                        "$ref": "#/components/schemas/ItemMarket"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "MarketSelectionName": {
                "type": "string",
                "enum": [
                    "itemmarket",
                    "lookup",
                    "pointsmarket",
                    "timestamp"
                ]
            },
            "MarketLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketSelectionName"
                        }
                    }
                },
                "type": "object"
            },
            "RacingCarsResponse": {
                "properties": {
                    "cars": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaceCar"
                        }
                    }
                },
                "type": "object"
            },
            "RaceCar": {
                "properties": {
                    "car_item_id": {
                        "$ref": "#/components/schemas/ItemId"
                    },
                    "car_item_name": {
                        "type": "string"
                    },
                    "top_speed": {
                        "type": "integer"
                    },
                    "acceleration": {
                        "type": "integer"
                    },
                    "braking": {
                        "type": "integer"
                    },
                    "dirt": {
                        "type": "integer"
                    },
                    "handling": {
                        "type": "integer"
                    },
                    "safety": {
                        "type": "integer"
                    },
                    "tarmac": {
                        "type": "integer"
                    },
                    "class": {
                        "$ref": "#/components/schemas/RaceClassEnum"
                    }
                },
                "type": "object"
            },
            "RacingTracksResponse": {
                "properties": {
                    "tracks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaceTrack"
                        }
                    }
                },
                "type": "object"
            },
            "RaceTrack": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/RaceTrackId"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RacingCarUpgradesResponse": {
                "properties": {
                    "carupgrades": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaceCarUpgrade"
                        }
                    }
                },
                "type": "object"
            },
            "RaceCarUpgrade": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/RaceCarUpgradeId"
                    },
                    "class_required": {
                        "$ref": "#/components/schemas/RaceClassEnum"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/RaceCarUpgradeCategory"
                    },
                    "subcategory": {
                        "$ref": "#/components/schemas/RaceCarUpgradeSubCategory"
                    },
                    "effects": {
                        "properties": {
                            "top_speed": {
                                "type": "integer"
                            },
                            "acceleration": {
                                "type": "integer"
                            },
                            "braking": {
                                "type": "integer"
                            },
                            "handling": {
                                "type": "integer"
                            },
                            "safety": {
                                "type": "integer"
                            },
                            "dirt": {
                                "type": "integer"
                            },
                            "tarmac": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "cost": {
                        "properties": {
                            "points": {
                                "type": "integer"
                            },
                            "cash": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RacingRacesResponse": {
                "properties": {
                    "races": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Race"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "Race": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/RaceId"
                    },
                    "title": {
                        "type": "string"
                    },
                    "track_id": {
                        "$ref": "#/components/schemas/RaceTrackId"
                    },
                    "creator_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RaceStatusEnum"
                    },
                    "laps": {
                        "type": "integer"
                    },
                    "participants": {
                        "properties": {
                            "minimum": {
                                "type": "integer"
                            },
                            "maximum": {
                                "type": "integer"
                            },
                            "current": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "schedule": {
                        "properties": {
                            "join_from": {
                                "type": "integer"
                            },
                            "join_until": {
                                "type": "integer"
                            },
                            "start": {
                                "type": "integer"
                            },
                            "end": {
                                "type": "integer",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "requirements": {
                        "properties": {
                            "car_class": {
                                "$ref": "#/components/schemas/RaceClassEnum"
                            },
                            "driver_class": {
                                "$ref": "#/components/schemas/RaceClassEnum"
                            },
                            "car_item_id": {
                                "$ref": "#/components/schemas/ItemId"
                            },
                            "requires_stock_car": {
                                "type": "boolean"
                            },
                            "requires_password": {
                                "type": "boolean"
                            },
                            "join_fee": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RacingTrackRecordsResponse": {
                "properties": {
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RaceRecord"
                        }
                    }
                },
                "type": "object"
            },
            "RaceRecord": {
                "properties": {
                    "driver_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "driver_name": {
                        "type": "string"
                    },
                    "car_item_id": {
                        "$ref": "#/components/schemas/ItemId"
                    },
                    "lap_time": {
                        "type": "integer"
                    },
                    "car_item_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RacerDetails": {
                "properties": {
                    "driver_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    },
                    "car_id": {
                        "$ref": "#/components/schemas/RaceCarId"
                    },
                    "car_item_id": {
                        "$ref": "#/components/schemas/ItemId"
                    },
                    "car_item_name": {
                        "type": "string"
                    },
                    "car_class": {
                        "$ref": "#/components/schemas/RaceClassEnum"
                    },
                    "has_crashed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "best_lap_time": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "race_time": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "time_ended": {
                        "type": "number",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RacingRaceDetailsResponse": {
                "allOf": [
                    {
                        "properties": {
                            "results": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RacerDetails"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Race"
                    }
                ]
            },
            "RacingSelectionName": {
                "type": "string",
                "enum": [
                    "cars",
                    "carupgrades",
                    "lookup",
                    "race",
                    "races",
                    "records",
                    "timestamp",
                    "tracks"
                ]
            },
            "RacingLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RacingSelectionName"
                        }
                    }
                },
                "type": "object"
            },
            "TornSubcrimesResponse": {
                "properties": {
                    "subcrimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornSubcrime"
                        }
                    }
                },
                "type": "object"
            },
            "TornSubcrime": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nerve_cost": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TornCrimesResponse": {
                "properties": {
                    "crimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornCrime"
                        }
                    }
                },
                "type": "object"
            },
            "TornCrime": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "category_name": {
                        "type": "string"
                    },
                    "enhancer_id": {
                        "type": "integer"
                    },
                    "enhancer_name": {
                        "type": "string"
                    },
                    "unique_outcomes_count": {
                        "type": "integer"
                    },
                    "unique_outcomes_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "TornCalendarActivity": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer"
                    },
                    "end": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TornCalendarResponse": {
                "properties": {
                    "calendar": {
                        "properties": {
                            "competitions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TornCalendarActivity"
                                }
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TornCalendarActivity"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TornHof": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "username": {
                        "type": "string"
                    },
                    "faction_id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "level": {
                        "type": "integer"
                    },
                    "last_action": {
                        "type": "integer"
                    },
                    "rank_name": {
                        "type": "string"
                    },
                    "rank_number": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "signed_up": {
                        "type": "integer"
                    },
                    "age_in_days": {
                        "type": "integer"
                    },
                    "value": {
                        "description": "Value representing the chosen category. Traveltime is shown in seconds. If the chosen category is 'rank', the value is of type string. If the chosen category is 'racingskill', the value is of type float. Otherwise it is an integer."
                    },
                    "rank": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TornHofResponse": {
                "properties": {
                    "hof": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornHof"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "FactionHofValues": {
                "properties": {
                    "chain": {
                        "description": "Maximum chain achieved by the faction. Null if chosen category is 'rank' or 'respect'.",
                        "type": "integer",
                        "nullable": true
                    },
                    "chain_duration": {
                        "description": "The duration of the chain. Null if chosen category is 'rank' or 'respect'.",
                        "type": "integer",
                        "nullable": true
                    },
                    "respect": {
                        "description": "Null if chosen category is 'chain'.",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TornFactionHof": {
                "properties": {
                    "faction_id": {
                        "$ref": "#/components/schemas/FactionId"
                    },
                    "name": {
                        "type": "string"
                    },
                    "members": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "rank": {
                        "description": "The full rank title & division of the faction.",
                        "type": "string"
                    },
                    "values": {
                        "$ref": "#/components/schemas/FactionHofValues"
                    }
                },
                "type": "object"
            },
            "TornFactionHofResponse": {
                "properties": {
                    "factionhof": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornFactionHof"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "TornLog": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/LogId"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TornLogCategory": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/LogCategoryId"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TornLogTypesResponse": {
                "properties": {
                    "logtypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornLog"
                        }
                    }
                },
                "type": "object"
            },
            "TornLogCategoriesResponse": {
                "properties": {
                    "logcategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornLogCategory"
                        }
                    }
                },
                "type": "object"
            },
            "Bounty": {
                "properties": {
                    "target_id": {
                        "$ref": "#/components/schemas/UserId"
                    },
                    "target_name": {
                        "type": "string"
                    },
                    "target_level": {
                        "type": "integer"
                    },
                    "lister_id": {
                        "description": "If the bounty is anonymous this field is null.",
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserId"
                            },
                            {
                                "type": "integer",
                                "nullable": true
                            }
                        ]
                    },
                    "lister_name": {
                        "description": "If the bounty is anonymous this field is null.",
                        "type": "string",
                        "nullable": true
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "valid_until": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TornBountiesResponse": {
                "properties": {
                    "bounties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bounty"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "TornSelectionName": {
                "type": "string",
                "enum": [
                    "bank",
                    "calendar",
                    "cards",
                    "chainreport",
                    "cityshops",
                    "companies",
                    "competition",
                    "crimes",
                    "dirtybombs",
                    "education",
                    "factionHof",
                    "factiontree",
                    "gyms",
                    "hof",
                    "honors",
                    "itemdetails",
                    "items",
                    "itemstats",
                    "logcategories",
                    "logtypes",
                    "lookup",
                    "medals",
                    "organisedcrimes",
                    "pawnshop",
                    "pokertables",
                    "properties",
                    "rackets",
                    "raidreport",
                    "raids",
                    "rankedwarreport",
                    "rankedwars",
                    "rockpaperscissors",
                    "searchforcash",
                    "shoplifting",
                    "stats",
                    "stocks",
                    "subcrimes",
                    "territory",
                    "territorynames",
                    "territorywarreport",
                    "territorywars",
                    "timestamp"
                ]
            },
            "TornLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TornSelectionName"
                        }
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsBootlegging": {
                "properties": {
                    "online_store": {
                        "description": "Online store statistics.",
                        "properties": {
                            "earnings": {
                                "type": "integer"
                            },
                            "visits": {
                                "type": "integer"
                            },
                            "customers": {
                                "type": "integer"
                            },
                            "sales": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "dvd_sales": {
                        "description": "DVD sales statistics.",
                        "properties": {
                            "action": {
                                "type": "integer"
                            },
                            "comedy": {
                                "type": "integer"
                            },
                            "drama": {
                                "type": "integer"
                            },
                            "fantasy": {
                                "type": "integer"
                            },
                            "horror": {
                                "type": "integer"
                            },
                            "romance": {
                                "type": "integer"
                            },
                            "thriller": {
                                "type": "integer"
                            },
                            "sci-fi": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            },
                            "earnings": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "dvds_copied": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsGraffiti": {
                "properties": {
                    "cans_used": {
                        "type": "integer"
                    },
                    "most_graffiti_in_one_area": {
                        "type": "integer"
                    },
                    "most_graffiti_simultaneously": {
                        "type": "integer"
                    },
                    "graffiti_removed": {
                        "type": "integer"
                    },
                    "cost_to_city": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsShoplifting": {
                "properties": {
                    "average_notoriety": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsCardSkimming": {
                "properties": {
                    "card_details": {
                        "properties": {
                            "recoverable": {
                                "type": "integer"
                            },
                            "recovered": {
                                "type": "integer"
                            },
                            "sold": {
                                "type": "integer"
                            },
                            "lost": {
                                "type": "integer"
                            },
                            "areas": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "amount": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "skimmers": {
                        "properties": {
                            "active": {
                                "type": "integer"
                            },
                            "most_lucrative": {
                                "type": "integer"
                            },
                            "oldest_recovered": {
                                "type": "integer"
                            },
                            "lost": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsHustling": {
                "properties": {
                    "total_audience_gathered": {
                        "type": "integer"
                    },
                    "biggest_money_won": {
                        "type": "integer"
                    },
                    "shill_money_collected": {
                        "type": "integer"
                    },
                    "pickpocket_money_collected": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsCracking": {
                "properties": {
                    "brute_force_cycles": {
                        "type": "integer"
                    },
                    "encryption_layers_broken": {
                        "type": "integer"
                    },
                    "highest_mips": {
                        "type": "integer"
                    },
                    "chars_guessed": {
                        "type": "integer"
                    },
                    "chars_guessed_total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeDetailsScamming": {
                "properties": {
                    "most_responses": {
                        "type": "integer",
                        "default": 0
                    },
                    "zones": {
                        "properties": {
                            "red": {
                                "type": "integer",
                                "default": 0
                            },
                            "neutral": {
                                "type": "integer",
                                "default": 0
                            },
                            "concern": {
                                "type": "integer",
                                "default": 0
                            },
                            "sensitivity": {
                                "type": "integer",
                                "default": 0
                            },
                            "temptation": {
                                "type": "integer",
                                "default": 0
                            },
                            "hesitation": {
                                "type": "integer",
                                "default": 0
                            },
                            "low_reward": {
                                "type": "integer",
                                "default": 0
                            },
                            "medium_reward": {
                                "type": "integer",
                                "default": 0
                            },
                            "high_reward": {
                                "type": "integer",
                                "default": 0
                            }
                        },
                        "type": "object"
                    },
                    "concerns": {
                        "properties": {
                            "attempts": {
                                "type": "integer",
                                "default": 0
                            },
                            "resolved": {
                                "type": "integer",
                                "default": 0
                            }
                        },
                        "type": "object"
                    },
                    "payouts": {
                        "properties": {
                            "low": {
                                "type": "integer",
                                "default": 0
                            },
                            "medium": {
                                "type": "integer",
                                "default": 0
                            },
                            "high": {
                                "type": "integer",
                                "default": 0
                            }
                        },
                        "type": "object"
                    },
                    "emails": {
                        "properties": {
                            "scraper": {
                                "type": "integer",
                                "default": 0
                            },
                            "phisher": {
                                "type": "integer",
                                "default": 0
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserSubcrime": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "success": {
                        "type": "integer"
                    },
                    "fail": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeRewardAmmo": {
                "properties": {
                    "standard": {
                        "type": "integer"
                    },
                    "special": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeRewardItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeRewards": {
                "properties": {
                    "money": {
                        "type": "integer"
                    },
                    "ammo": {
                        "$ref": "#/components/schemas/UserCrimeRewardAmmo"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserCrimeRewardItem"
                        }
                    }
                },
                "type": "object"
            },
            "UserCrimeAttempts": {
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "success": {
                        "type": "integer"
                    },
                    "fail": {
                        "type": "integer"
                    },
                    "critical_fail": {
                        "type": "integer"
                    },
                    "subcrimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSubcrime"
                        }
                    }
                },
                "type": "object"
            },
            "UserCrimeUniquesRewardMoney": {
                "properties": {
                    "min": {
                        "type": "integer"
                    },
                    "max": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserCrimeUniquesRewardAmmo": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/UserCrimeUniquesRewardAmmoEnum"
                    }
                },
                "type": "object"
            },
            "UserCrimeUniquesReward": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserCrimeRewardItem"
                        }
                    },
                    "money": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserCrimeUniquesRewardMoney"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    },
                    "ammo": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserCrimeUniquesRewardAmmo"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UserCrimeUniques": {
                "properties": {
                    "id": {
                        "description": "Unique result id.",
                        "type": "integer"
                    },
                    "rewards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserCrimeUniquesReward"
                        }
                    }
                },
                "type": "object"
            },
            "UserCrimesResponse": {
                "properties": {
                    "crimes": {
                        "$ref": "#/components/schemas/UserCrime"
                    }
                },
                "type": "object"
            },
            "UserCrime": {
                "properties": {
                    "nerve_spent": {
                        "type": "integer"
                    },
                    "skill": {
                        "type": "integer"
                    },
                    "progression_bonus": {
                        "type": "integer"
                    },
                    "achieved_uniques": {
                        "description": "This field is being replaced by 'uniques' field which provides more information about achieved uniques. This field will be removed on 1st of December.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "deprecated": true
                    },
                    "rewards": {
                        "$ref": "#/components/schemas/UserCrimeRewards"
                    },
                    "attempts": {
                        "$ref": "#/components/schemas/UserCrimeAttempts"
                    },
                    "uniques": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserCrimeUniques"
                        }
                    },
                    "miscellaneous": {
                        "description": " Miscellaneous stats for specific crime. Results differ based on the cat id.",
                        "type": "object",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsBootlegging"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsGraffiti"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsShoplifting"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsCardSkimming"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsHustling"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsCracking"
                            },
                            {
                                "$ref": "#/components/schemas/UserCrimeDetailsScamming"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UserRacesResponse": {
                "properties": {
                    "races": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RacingRaceDetailsResponse"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "UserRaceCarDetails": {
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/RaceCarId"
                            },
                            "name": {
                                "type": "string"
                            },
                            "worth": {
                                "type": "integer"
                            },
                            "points_spent": {
                                "type": "integer"
                            },
                            "races_entered": {
                                "type": "integer"
                            },
                            "races_won": {
                                "type": "integer"
                            },
                            "is_removed": {
                                "type": "boolean"
                            },
                            "parts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RaceCarUpgradeId"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/RaceCar"
                    }
                ]
            },
            "UserEnlistedCarsResponse": {
                "properties": {
                    "enlistedcars": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRaceCarDetails"
                        }
                    }
                },
                "type": "object"
            },
            "UserForumPostsResponse": {
                "properties": {
                    "forumPosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumPost"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "UserForumThreadsResponse": {
                "properties": {
                    "forumThreads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumThreadUserExtended"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequestLinks"
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "UserForumSubscribedThreadsResponse": {
                "properties": {
                    "forumSubscribedThreads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumSubscribedThread"
                        }
                    }
                },
                "type": "object"
            },
            "UserForumFeedResponse": {
                "properties": {
                    "forumFeed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumFeed"
                        }
                    }
                },
                "type": "object"
            },
            "UserForumFriendsResponse": {
                "properties": {
                    "forumFriends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumFeed"
                        }
                    }
                },
                "type": "object"
            },
            "HofValue": {
                "properties": {
                    "value": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "HofValueString": {
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "rank": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserHofStats": {
                "properties": {
                    "attacks": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "busts": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "defends": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "networth": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "offences": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "revives": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "level": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "rank": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "awards": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "racing_skill": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "racing_points": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "racing_wins": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "travel_time": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "working_stats": {
                        "$ref": "#/components/schemas/HofValue"
                    },
                    "battle_stats": {
                        "description": "This field is null when requesting data for other players.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HofValue"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "UserHofResponse": {
                "properties": {
                    "hof": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserHofStats"
                        }
                    }
                },
                "type": "object"
            },
            "UserCalendar": {
                "properties": {
                    "start_time": {
                        "description": "Event start time displayed in TCT.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserCalendarResponse": {
                "properties": {
                    "calendar": {
                        "$ref": "#/components/schemas/UserCalendar"
                    }
                },
                "type": "object"
            },
            "UserBountiesResponse": {
                "properties": {
                    "bounties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bounty"
                        }
                    }
                },
                "type": "object"
            },
            "UserJobRanks": {
                "properties": {
                    "army": {
                        "$ref": "#/components/schemas/JobPositionArmyEnum"
                    },
                    "grocer": {
                        "$ref": "#/components/schemas/JobPositionGrocerEnum"
                    },
                    "casino": {
                        "$ref": "#/components/schemas/JobPositionCasinoEnum"
                    },
                    "medical": {
                        "$ref": "#/components/schemas/JobPositionMedicalEnum"
                    },
                    "law": {
                        "$ref": "#/components/schemas/JobPositionLawEnum"
                    },
                    "education": {
                        "$ref": "#/components/schemas/JobPositionEducationEnum"
                    }
                },
                "type": "object"
            },
            "UserJobRanksResponse": {
                "properties": {
                    "jobranks": {
                        "$ref": "#/components/schemas/UserJobRanks"
                    }
                },
                "type": "object"
            },
            "UserItemMarkeListingItemDetails": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "rarity": {
                        "type": "string",
                        "enum": [
                            "yellow",
                            "orange",
                            "red"
                        ],
                        "nullable": true
                    },
                    "uid": {
                        "type": "integer",
                        "nullable": true
                    },
                    "stats": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ItemMarketListingItemStats"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ]
                    },
                    "bonuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemMarketListingItemBonus"
                        }
                    }
                },
                "type": "object"
            },
            "UserItemMarketListing": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "average_price": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "available": {
                        "description": "Amount remaining in the inventory.",
                        "type": "integer"
                    },
                    "item": {
                        "$ref": "#/components/schemas/UserItemMarkeListingItemDetails"
                    }
                },
                "type": "object"
            },
            "UserItemMarketResponse": {
                "properties": {
                    "itemmarket": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserItemMarketListing"
                        }
                    },
                    "_metadata": {
                        "$ref": "#/components/schemas/RequestMetadataWithLinks"
                    }
                },
                "type": "object"
            },
            "UserSelectionName": {
                "type": "string",
                "enum": [
                    "ammo",
                    "attacks",
                    "attacksfull",
                    "bars",
                    "basic",
                    "battlestats",
                    "bazaar",
                    "calendar",
                    "cooldowns",
                    "crimes",
                    "criminalrecord",
                    "discord",
                    "display",
                    "education",
                    "enlistedcars",
                    "equipment",
                    "events",
                    "forumfeed",
                    "forumfriends",
                    "forumposts",
                    "forumsubscribedthreads",
                    "forumthreads",
                    "gym",
                    "hof",
                    "honors",
                    "icons",
                    "inventory",
                    "itemmarket",
                    "jobpoints",
                    "log",
                    "lookup",
                    "medals",
                    "merits",
                    "messages",
                    "missions",
                    "money",
                    "networth",
                    "newevents",
                    "newmessages",
                    "notifications",
                    "perks",
                    "personalstats",
                    "profile",
                    "properties",
                    "publicStatus",
                    "races",
                    "refills",
                    "reports",
                    "revives",
                    "revivesfull",
                    "skills",
                    "stocks",
                    "timestamp",
                    "travel",
                    "weaponexp",
                    "workstats"
                ]
            },
            "UserLookupResponse": {
                "properties": {
                    "selections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSelectionName"
                        }
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "ApiKeyPublic": {
                "name": "key",
                "in": "query",
                "description": "API key (Public)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "ApiKeyMinimal": {
                "name": "key",
                "in": "query",
                "description": "API key (Minimal)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "ApiKeyLimited": {
                "name": "key",
                "in": "query",
                "description": "API key (Limited)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "ApiLimit100": {
                "name": "limit",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 100,
                    "maximum": 100,
                    "minimum": 1
                }
            },
            "ApiLimit1000": {
                "name": "limit",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 1000,
                    "maximum": 1000,
                    "minimum": 1
                }
            },
            "ApiLimit": {
                "name": "limit",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "ApiSort": {
                "name": "sort",
                "in": "query",
                "description": "Sorted by the greatest timestamps",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "DESC",
                    "enum": [
                        "DESC",
                        "ASC"
                    ]
                }
            },
            "ApiTo": {
                "name": "to",
                "in": "query",
                "description": "Timestamp that sets the upper limit for the data returned. Data returned will be up to and including this time",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "ApiFrom": {
                "name": "from",
                "in": "query",
                "description": "Timestamp that sets the lower limit for the data returned. Data returned will be after this time",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "ApiOffset": {
                "name": "offset",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 0,
                    "minimum": 0
                }
            },
            "ApiOffsetNoDefault": {
                "name": "offset",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "ApiStripTagsTrue": {
                "name": "striptags",
                "in": "query",
                "description": "Determines if fields include HTML or not ('Hospitalized by <a href=...>user</a>' vs 'Hospitalized by user').",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "true",
                    "enum": [
                        "true",
                        "false"
                    ]
                }
            },
            "ApiStripTagsFalse": {
                "name": "striptags",
                "in": "query",
                "description": "Determines if fields include HTML or not ('Hospitalized by <a href=...>user</a>' vs 'Hospitalized by user').",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "false",
                    "enum": [
                        "true",
                        "false"
                    ]
                }
            },
            "ApiStripTags": {
                "name": "striptags",
                "in": "query",
                "description": "Determines if fields include HTML or not ('Hospitalized by <a href=...>user</a>' vs 'Hospitalized by user').",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ]
                }
            }
        }
    },
    "tags": [
        {
            "name": "Torn",
            "description": "Part of Torn section"
        },
        {
            "name": "Racing",
            "description": "Part of Racing section or related to Racing"
        },
        {
            "name": "User",
            "description": "Part of User section"
        },
        {
            "name": "Faction",
            "description": "Part of Faction section"
        },
        {
            "name": "Market",
            "description": "Part of Market section"
        },
        {
            "name": "Forum",
            "description": "Part of Forum section or related to Forum"
        },
        {
            "name": "Crimes 2.0",
            "description": "Related to crimes 2.0"
        },
        {
            "name": "Hall of Fame",
            "description": "Related to Hall of Fame"
        },
        {
            "name": "Logs",
            "description": "Related to user logs"
        },
        {
            "name": "Bounties",
            "description": "Related to bounties"
        },
        {
            "name": "Attacking",
            "description": "Related to attacking"
        },
        {
            "name": "Item Market",
            "description": "Related to item market"
        },
        {
            "name": "Stable",
            "description": "Stable selections are not likely to undergo significant changes."
        },
        {
            "name": "Unstable",
            "description": "Future updates may result in sudden or significant changes."
        }
    ]
}